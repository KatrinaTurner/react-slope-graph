{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"d3\"","webpack:///external \"react\"","webpack:///external \"@grafana/data\"","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./components/RenderGraph.js","webpack:///./components/Canvas.tsx","webpack:///./module.ts","webpack:///./SimplePanel.tsx","webpack:///./parser.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__assign","assign","arguments","length","apply","this","SvgHandler","id","containerID","parsedData","propsHeight","propsWidth","header1","header2","top_10_pairs","topPairs","source_orgs","srcOrgs","dest_orgs","destOrgs","alpha","color_palette","console","log","panelWidth","document","getElementById","offsetWidth","offsetHeight","margin","width","height","svg","d3","append","attr","x","domain","range","yl","yr","leftAxis","tickSize","ticks","tickFormat","rightAxis","selectAll","wrap","div","style","forEach","element","datum","coords","color","y","on","transition","duration","html","volume","Math","round","source","dest","pageX","pageY","text","each","word","words","split","reverse","line","lineNumber","dy","parseFloat","tspan","pop","push","join","node","getComputedTextLength","props","panelId","chart","renderGraph","data","options","graph_options","num_pairs","extractedData","series","fields","transformedData","values","buffer","row","sorted_org_pairs","sort","a","b","slice","min","source_encoding","counter","new_org","added","j","parseInt","dest_encoding","max_value","color_scale","ceil","ParseData","numLines","setPanelOptions","builder","addTextInput","path","description","defaultValue","addBooleanSwitch","addRadio","settings","label","showIf","config","addNumberInput"],"mappings":";0EACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,IAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gBClFrDhC,EAAOD,QAAUkC,G,cCAjBjC,EAAOD,QAAUmC,G,cCAjBlC,EAAOD,QAAUoC,G,+CC6BV,IAAIC,EAAW,WAQlB,OAPAA,EAAWzB,OAAO0B,QAAU,SAAkBlB,GAC1C,IAAK,IAAIa,EAAG/B,EAAI,EAAGyB,EAAIY,UAAUC,OAAQtC,EAAIyB,EAAGzB,IAE5C,IAAK,IAAI8B,KADTC,EAAIM,UAAUrC,GACOU,OAAOkB,UAAUC,eAAe1B,KAAK4B,EAAGD,KAAIZ,EAAEY,GAAKC,EAAED,IAE9E,OAAOZ,IAEKqB,MAAMC,KAAMH,Y,yMClCXI,E,WACnB,WAAYC,I,4FAAI,SACdF,KAAKG,YAAcD,E,2DAGTE,EAAYC,EAAaC,EAAYC,EAASC,GAExD,GAAKJ,EAAL,CAIA,IAAIK,EAAeL,EAAWM,SAC1BC,EAAcP,EAAWQ,QACzBC,EAAYT,EAAWU,SACfV,EAAWW,MACHX,EAAWY,cAEfP,EAAaA,EAAaX,OAAS,GAAG,GACtCW,EAAa,GAAG,GAEhCQ,QAAQC,IAAI,sBAEZ,IAAIC,EAAaC,SAASC,eAAerB,KAAKG,aAAamB,YACzCF,SAASC,eAAerB,KAAKG,aAAaoB,aAE5DN,QAAQC,IAAIlB,KAAKG,YAAaM,GAE9B,IAAIe,EAAgB,GAAhBA,EAA2B,IAA3BA,EAAwC,GAAxCA,EAAkD,IACpDC,EAAQN,EAAaK,EAAcA,EACnCE,EAASrB,EAAcmB,EAAaA,EAKlCG,EAAMC,SAAU,IAAM5B,KAAKG,aAC5B0B,OAAO,OACPC,KAAK,QAASL,EAAQD,EAAcA,GACpCM,KAAK,SAAUJ,EAASF,EAAaA,GACrCK,OAAO,KACPC,KAAK,YACJ,aAAeN,EAAc,IAAMA,EAAa,KA6BhDO,EAAIH,gBACLI,OAAO,CAAC,EAAG,IACXC,MAAM,CAAC,EAAGR,IAITS,EAAKN,gBACNI,OAAO,CAAC,EAAGrB,EAAYb,OAAS,IAChCmC,MAAM,CAAC,EAAGP,IAETS,EAAKP,gBACNI,OAAO,CAAC,EAAGnB,EAAUf,OAAS,IAC9BmC,MAAM,CAAC,EAAGP,IAITU,EAAWR,WAAYM,GACxBG,SAAS,GACTC,MAAM3B,EAAYb,QAClByC,YAAW,SAACzE,GACX,OAAO6C,EAAY7C,MAGnB0E,EAAYZ,YAAaO,GAC1BE,SAAS,GACTC,MAAMzB,EAAUf,QAChByC,YAAW,SAACzE,GACX,OAAO+C,EAAU/C,MAGrB6D,EAAIE,OAAO,KAAKlE,KAAKyE,GAClBN,KAAK,QAAS,QACdA,KAAK,SAAU,IACfW,UAAU,cACV9E,KAAK+E,EAAMlB,EAAc,IACzBM,KAAK,YAAa,oBAErBH,EAAIE,OAAO,KACRC,KAAK,YAAa,aAAeL,EAAQ,OACzC9D,KAAK6E,GACLV,KAAK,QAAS,QACdW,UAAU,cACV9E,KAAK+E,EAAMlB,EAAe,IAC1BM,KAAK,YAAa,mBAKbF,gBACLI,OAAO,CAACvB,EAAaA,EAAaX,OAAS,GAAG,GAAIW,EAAa,GAAG,KAClEwB,MAAM,CAAC,EAAG,KAFb,IAIIU,EAAMf,SAAU,QAAQC,OAAO,OAChCC,KAAK,QAAS,WACdc,MAAM,UAAW,GAMpBnC,EAAaoC,SAAQ,SAASC,GAChBA,EAAQ,GAEpBnB,EAAIE,OAAO,QACRkB,MAAMD,EAAQE,QACdlB,KAAK,OAAQ,QACbA,KAAK,UAAU,SAAUhE,GAAK,OAAOA,EAAE,GAAGmF,SAM1CnB,KAAK,eAAgB,GACrBA,KAAK,IAAKF,SACRG,GAAE,SAAUjE,GAAK,OAAOiE,EAAEjE,EAAEiE,MAC5BmB,GAAE,SAAUpF,GACX,OAAW,GAAPA,EAAEiE,EACGG,EAAGpE,EAAEoF,GAELf,EAAGrE,EAAEoF,OAGjBC,GAAG,aAAa,SAAUrF,GACzB8D,SAAU5B,MAAM8B,KAAK,SAAU,UAC5BA,KAAK,QAAS,cACjBa,EAAIS,aACDC,SAAS,KACTT,MAAM,UAAW,IACpBD,EAAIW,MAAK,WACP,IAAI7E,EAAQX,EAAE,GAAGW,MAEb8E,EADJ9E,GAAgB,IAuBhB,OApBE8E,EADE9E,EAAQ,IACA+E,KAAKC,MAAc,GAARhF,GAAc,GAAM,OAEzCA,GAAgB,KACJ,IACA+E,KAAKC,MAAc,GAARhF,GAAc,GAAM,OAEzCA,GAAgB,KACJ,IACA+E,KAAKC,MAAc,GAARhF,GAAc,GAAM,OAEzCA,GAAgB,KACJ,IACA+E,KAAKC,MAAc,GAARhF,GAAc,GAAM,MAE/B+E,KAAKC,MAAc,GAARhF,GAAc,GAAM,MAKtC,qBAAuBX,EAAE,GAAG4F,OAAS,8BAAgC5F,EAAE,GAAG6F,KAAO,yBAA2BJ,KAGtHX,MAAM,OAAShB,QAASgC,MAAS,MACjChB,MAAM,MAAQhB,QAASiC,MAAQ,GAAM,SAEzCV,GAAG,YAAY,SAAUrF,GACxB6E,EAAIS,aACDC,SAAS,KACTT,MAAM,UAAW,GACpBhB,SAAU5B,MAAM8B,KAAK,UAAU,WAC7B,OAAOhE,EAAE,GAAGmF,eAMpBtB,EAAIE,OAAO,QACRC,KAAK,QAAS,eACdA,KAAK,YAAa,cAAiBN,EAAc,EAAK,KAAQA,EAAa,EAAK,KAChFM,KAAK,cAAe,UACpBgC,KAAKvD,GAERoB,EAAIE,OAAO,QACRC,KAAK,QAAS,eACdA,KAAK,YAAa,cAAgBL,EAAQD,EAAe,GAAK,KAAQA,EAAa,EAAK,KACxFM,KAAK,cAAe,UACpBgC,KAAKtD,GApKR,SAASkC,EAAKoB,EAAMrC,GAClBqC,EAAKC,MAAK,WAUR,IATA,IAEEC,EAFEF,EAAOlC,SAAU5B,MACnBiE,EAAQH,EAAKA,OAAOI,MAAM,OAAOC,UAEjCC,EAAO,GACPC,EAAa,EAEbnB,EAAIY,EAAKhC,KAAK,KACdwC,EAAKC,WAAWT,EAAKhC,KAAK,OAC1B0C,EAAQV,EAAKA,KAAK,MAAMjC,OAAO,SAASC,KAAK,IAAK,GAAGA,KAAK,IAAKoB,GAAGpB,KAAK,KAAMwC,EAAK,MAC7EN,EAAOC,EAAMQ,OAClBL,EAAKM,KAAKV,GACVQ,EAAMV,KAAKM,EAAKO,KAAK,MACjBH,EAAMI,OAAOC,wBAA0BpD,IACzC2C,EAAKK,MACLD,EAAMV,KAAKM,EAAKO,KAAK,MACrBP,EAAO,CAACJ,GACRQ,EAAQV,EAAKjC,OAAO,SAASC,KAAK,IAAK,GAAGA,KAAK,IAAKoB,GAAGpB,KAAK,KAXjD,MAWyDuC,EAA0BC,EAAK,MAAMR,KAAKE,a,gCC7D7G,EAAS,SAAAc,GAgBpB,OAdA,qBAAU,WACR7D,QAAQC,IAAI,aACZ,IAAMhB,EAAK4E,EAAMC,QAEXC,EAAQ,IAAI,EAAW,SAAW9E,GACxCe,QAAQC,IAAI8D,GAGZA,EAAMC,YAAYH,EAAMI,KAAMJ,EAAMpD,OAAQoD,EAAMrD,MAAO,KAAM,SAO7D,yBAAKvB,GAAI,SAAW4E,EAAMC,QAASnC,MAAO,CAAElB,OAAQoD,EAAMpD,OAAQD,MAAOqD,EAAMrD,UCrBrF,uCAIO,IAAM,EAAS,IAAI,eCIkB,SAAC,G,IAAE0D,EAAO,UAAED,EAAI,OAAEzD,EAAK,QAAEC,EAAM,SAAExB,EAAE,KACzEkF,EAAgB,EAAH,GACZD,GAGC/E,ECZD,SAAmB8E,EAAMG,GAC9BpE,QAAQC,IAAI,mBAAqBmE,GACjCpE,QAAQC,IAAI,eACZD,QAAQC,IAAIgE,GAIZ,IAAII,EAAgBJ,EAAKK,OAAO,GAAGC,OAC/BC,EAAkB,GAEtB,IAAK,IAAIjI,KAAK8H,EAAc,GAAGI,OAAOC,OAAQ,CAC5C,IAAIC,EAAM,CAACN,EAAc,GAAGI,OAAOC,OAAOnI,GAAI8H,EAAc,GAAGI,OAAOC,OAAOnI,GAAI8H,EAAc,GAAGI,OAAOC,OAAOnI,IAChHiI,EAAgBf,KAAKkB,GAEvB3E,QAAQC,IAAI,oBACZD,QAAQC,IAAIuE,GAEZ,IAAII,EAAmBJ,EAAgBK,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE,GAAKD,EAAE,MAG3DtF,EAAeoF,EAAiBI,MAAM,EAAGzC,KAAK0C,IAAIb,EAAWQ,EAAiB/F,SAI9Ea,EAAc,GACdwF,EAAkB,GAClBC,EAAU,EACd,IAAK,IAAI5I,KAAKiD,EAAc,CAC1B,IAAI4F,EAAU5F,EAAajD,GAAG,GAC1B8I,GAAQ,EAIZ,IAAK,IAAIC,KAHT9F,EAAajD,GAAGwF,OAAS,CACvB,CAAE,EAAK,EAAG,MAASvC,EAAajD,GAAG,IACnC,CAAE,EAAK,IACKmD,EACZ,GAAIA,EAAY4F,IAAMF,EAAS,CAC7BC,GAAQ,EACRH,EAAgBzB,KAAK8B,SAASD,IAC9B9F,EAAajD,GAAGwF,OAAO,GAAGE,EAAIsD,SAASD,GACvC,MAGCD,IACH3F,EAAY+D,KAAK2B,GACjBF,EAAgBzB,KAAK0B,GACrB3F,EAAajD,GAAGwF,OAAO,GAAGE,EAAIkD,EAC9BA,KAMJ,IAAIvF,EAAY,GACZ4F,EAAgB,GAEpB,IAAK,IAAIjJ,KADT4I,EAAU,EACI3F,EAAc,CAC1B,IAAI4F,EAAU5F,EAAajD,GAAG,GAC1B8I,GAAQ,EACZ,IAAK,IAAIC,KAAK1F,EACZ,GAAIA,EAAU0F,IAAMF,EAAS,CAC3BC,GAAQ,EACRG,EAAc/B,KAAK8B,SAASD,IAC5B9F,EAAajD,GAAGwF,OAAO,GAAGE,EAAIsD,SAASD,GACvC,MAGCD,IACHzF,EAAU6D,KAAK2B,GACfI,EAAc/B,KAAK0B,GACnB3F,EAAajD,GAAGwF,OAAO,GAAGE,EAAIkD,EAC9BA,KAWJ,IACIpF,EAAgB,CAClB,2BACA,2BACA,2BACA,2BACA,2BACA,yBACA,yBACA,yBACA,wBACA,yBAEE0F,EAAYjG,EAAa,GAAG,GAIhC,IAAK,IAAIjD,KAFTyD,QAAQC,IAAI,YAAcwF,GAEZjG,EAAc,CAC1B,IAAIkG,EAAcnD,KAAKoD,KAAKnG,EAAajD,GAAG,GAAKkJ,EAAY,IACzDC,EAAc,GAChBA,IAEFlG,EAAajD,GAAGwF,OAAO,GAAGC,MAAQjC,EAAc2F,GAGhDlG,EAAajD,GAAGwF,OAAO,GAAGU,OAASjD,EAAajD,GAAG,GACnDiD,EAAajD,GAAGwF,OAAO,GAAGW,KAAOlD,EAAajD,GAAG,GAenD,OARAyD,QAAQC,IAAIT,GAEM,CAChBG,QAASD,EACTG,SAAUD,EACVH,SAAUD,GD1GOoG,CAAU3B,EAAME,EAAc0B,UAKjD,OAHA7F,QAAQC,IAAId,GACZa,QAAQC,IAAIkE,GAEL,kBAAC,EAAM,CAAC1D,OAAQA,EAAQD,MAAOA,EAAOsD,QAAS7E,EAAIiF,QAASC,EAAeF,KAAM9E,ODdxB2G,iBAAgB,SAAAC,GAChF,OAAOA,EACJC,aAAa,CACZC,KAAM,OACNnJ,KAAM,qBACNoJ,YAAa,8BACbC,aAAc,uCAEfC,iBAAiB,CAChBH,KAAM,kBACNnJ,KAAM,sBACNqJ,cAAc,IAEfE,SAAS,CACRJ,KAAM,kBACNE,aAAc,KACdrJ,KAAM,sBACNwJ,SAAU,CACRpC,QAAS,CACP,CACE1G,MAAO,KACP+I,MAAO,SAET,CACE/I,MAAO,KACP+I,MAAO,UAET,CACE/I,MAAO,KACP+I,MAAO,WAIbC,OAAQ,SAAAC,GAAU,OAAAA,EAAA,mBAEnBC,eAAe,CACdT,KAAM,WACNnJ,KAAM,6BACNqJ,aAAc,KAEfH,aAAa,CACZC,KAAM,aACNnJ,KAAM,qBACNqJ,aAAc,eAEfH,aAAa,CACZC,KAAM,cACNnJ,KAAM,sBACNqJ,aAAc","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import * as d3 from 'd3';\r\n\r\n\r\nexport default class SvgHandler {\r\n  constructor(id) {\r\n    this.containerID = id;\r\n  }\r\n\r\n  renderGraph(parsedData, propsHeight, propsWidth, header1, header2) {\r\n\r\n    if (!parsedData) {\r\n      return;\r\n    }\r\n\r\n    let top_10_pairs = parsedData.topPairs;\r\n    let source_orgs = parsedData.srcOrgs;\r\n    let dest_orgs = parsedData.destOrgs;\r\n    let alpha = parsedData.alpha;\r\n    let color_palette = parsedData.color_palette;\r\n\r\n    let min_value = top_10_pairs[top_10_pairs.length - 1][2]\r\n    let max_value = top_10_pairs[0][2]\r\n\r\n    console.log(\"rendering Graph...\");\r\n\r\n    let panelWidth = document.getElementById(this.containerID).offsetWidth;\r\n    let panelHeight = document.getElementById(this.containerID).offsetHeight;\r\n\r\n    console.log(this.containerID, top_10_pairs);\r\n    // set the dimensions and margins of the graph\r\n    var margin = { top: 50, right: 400, bottom: 25, left: 400 },\r\n      width = panelWidth - margin.left - margin.right,\r\n      height = propsHeight - margin.top - margin.bottom;\r\n\r\n\r\n\r\n    // append the svg object to the body of the page\r\n    var svg = d3.select(\"#\" + this.containerID)\r\n      .append(\"svg\")\r\n      .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\",\r\n        \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n\r\n    // function to wrap text!\r\n    function wrap(text, width) {\r\n      text.each(function () {\r\n        var text = d3.select(this),\r\n          words = text.text().split(/\\s+/).reverse(),\r\n          word,\r\n          line = [],\r\n          lineNumber = 0,\r\n          lineHeight = 1.1, // ems\r\n          y = text.attr(\"y\"),\r\n          dy = parseFloat(text.attr(\"dy\")),\r\n          tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\r\n        while (word = words.pop()) {\r\n          line.push(word);\r\n          tspan.text(line.join(\" \"));\r\n          if (tspan.node().getComputedTextLength() > width) {\r\n            line.pop();\r\n            tspan.text(line.join(\" \"));\r\n            line = [word];\r\n            tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add X scale\r\n    var x = d3.scaleLinear()\r\n      .domain([0, 1])\r\n      .range([0, width])\r\n\r\n\r\n    // y scales\r\n    var yl = d3.scaleLinear()\r\n      .domain([0, source_orgs.length - 1])\r\n      .range([0, height])\r\n\r\n    var yr = d3.scaleLinear()\r\n      .domain([0, dest_orgs.length - 1])\r\n      .range([0, height])\r\n\r\n\r\n    // Add Y axes\r\n    var leftAxis = d3.axisLeft(yl)\r\n      .tickSize(5)\r\n      .ticks(source_orgs.length)\r\n      .tickFormat((d) => {\r\n        return source_orgs[d]\r\n      })\r\n\r\n    var rightAxis = d3.axisRight(yr)\r\n      .tickSize(5)\r\n      .ticks(dest_orgs.length)\r\n      .tickFormat((d) => {\r\n        return dest_orgs[d]\r\n      })\r\n\r\n    svg.append(\"g\").call(leftAxis)\r\n      .attr(\"class\", \"axis\")\r\n      .attr(\"margin\", 10)\r\n      .selectAll(\".tick text\")\r\n      .call(wrap, margin.left - 50)\r\n      .attr(\"transform\", \"translate(\" + -10 + \",0)\")\r\n\r\n    svg.append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + width + \",0)\")\r\n      .call(rightAxis)\r\n      .attr(\"class\", \"axis\")\r\n      .selectAll(\".tick text\")\r\n      .call(wrap, margin.right - 50)\r\n      .attr(\"transform\", \"translate(\" + 10 + \",0)\")\r\n\r\n\r\n\r\n    // scale for width of lines\r\n    var w = d3.scaleLinear()\r\n      .domain([top_10_pairs[top_10_pairs.length - 1][2], top_10_pairs[0][2]])\r\n      .range([3, 15])\r\n\r\n    var div = d3.select(\"body\").append(\"div\")\r\n      .attr(\"class\", \"tooltip\")\r\n      .style(\"opacity\", 0);\r\n\r\n////////// WORKS TILL HERE!!!! /////////////////////\r\n\r\n    // Add the lines\r\n    //for (i = 0; i < top_10_pairs.length; i++)\r\n    top_10_pairs.forEach(function(element) {\r\n      var value = element[2];\r\n\r\n      svg.append(\"path\")\r\n        .datum(element.coords)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", function (d) { return d[0].color })\r\n        //() => {\r\n        //     var alpha = 0.7; // w(element[2]) / 5;\r\n        //     var color = \"rgba(51, 102, 255,\" + alpha + \")\";\r\n        //     return color;\r\n        // })\r\n        .attr(\"stroke-width\", 8) // w(element[2]))\r\n        .attr(\"d\", d3.line()\r\n          .x(function (d) { return x(d.x) })\r\n          .y(function (d) {\r\n            if (d.x == 0) {\r\n              return yl(d.y)\r\n            } else {\r\n              return yr(d.y)\r\n            }\r\n          }))\r\n        .on(\"mouseover\", function (d) {\r\n          d3.select(this).attr(\"stroke\", \"orange\")\r\n            .attr(\"class\", \"path-hover\");\r\n          div.transition()\r\n            .duration(200)\r\n            .style(\"opacity\", .9);\r\n          div.html(() => {                    // takes in value in BYTES and converts to appropriate MB,GB, etc\r\n            var value = d[0].value\r\n            value = value / 1000;\r\n            var volume = value;\r\n            if (value < 1000) {\r\n              volume = (Math.round(value * 10) / 10) + \" KB\";\r\n            } else {\r\n              value = value / 1000;\r\n              if (value < 1000) {\r\n                volume = (Math.round(value * 10) / 10) + \" MB\"\r\n              } else {\r\n                value = value / 1000;\r\n                if (value < 1000) {\r\n                  volume = (Math.round(value * 10) / 10) + \" GB\"\r\n                } else {\r\n                  value = value / 1000;\r\n                  if (value < 1000) {\r\n                    volume = (Math.round(value * 10) / 10) + \" TB\"\r\n                  } else {\r\n                    volume = (Math.round(value * 10) / 10) + \" PB\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            var text = \"<p><b>Source:</b> \" + d[0].source + \"</p><p><b>Destination:</b> \" + d[0].dest + \"</p><p><b>Volume:</b> \" + volume;\r\n            return text;\r\n          })\r\n            .style(\"left\", (d3.event.pageX) + \"px\")\r\n            .style(\"top\", (d3.event.pageY - 28) + \"px\")\r\n        })\r\n        .on(\"mouseout\", function (d) {\r\n          div.transition()\r\n            .duration(500)\r\n            .style(\"opacity\", 0);\r\n          d3.select(this).attr(\"stroke\", () => {\r\n            return d[0].color;\r\n          })\r\n        })\r\n    })\r\n\r\n    // Add axis labels\r\n    svg.append(\"text\")\r\n      .attr(\"class\", \"header-text\")\r\n      .attr(\"transform\", \"translate(\" + -(margin.left / 2) + \",\" + -(margin.top / 2) + \")\")  // above left axis\r\n      .attr(\"text-anchor\", \"center\")\r\n      .text(header1);\r\n\r\n    svg.append(\"text\")\r\n      .attr(\"class\", \"header-text\")\r\n      .attr(\"transform\", \"translate(\" + (width + margin.right / 5) + \",\" + -(margin.top / 2) + \")\")  // above right axis\r\n      .attr(\"text-anchor\", \"center\")\r\n      .text(header2);\r\n\r\n    // add legend\r\n\r\n    // var colorScale = d3.scaleQuantize()\r\n    //     .domain([min_value,max_value])\r\n    //     .range(color_palette);\r\n\r\n    // var colorLegend = d3.legendColor()\r\n    //     .labelFormat(d3.format(\".0f\"))\r\n    //     .scale(colorScale)\r\n    //     .shapePadding(3)\r\n    //     .shapeWidth(50)\r\n    //     .shapeHeight(20)\r\n    //     .labelOffset(12);\r\n\r\n    // svg.append(\"g\")\r\n    //     .attr(\"transform\", \"translate(\" + (width + margin.right / 2) + \", 60)\")\r\n    //     .call(colorLegend);\r\n  }\r\n\r\n}\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport  SvgHandler from './RenderGraph.js';\r\n\r\n// import Chart from 'chart.heatmap.js';\r\nexport const Canvas = props => {\r\n\r\n  useEffect(() => {\r\n    console.log('rendering');\r\n    const id = props.panelId;\r\n    // const chartDiv = document.getElementById('Chart_' + id);\r\n    const chart = new SvgHandler('Chart_' + id);\r\n    console.log(chart);\r\n\r\n    // data, ctrl, header1, header2\r\n    chart.renderGraph(props.data, props.height, props.width, null, null);\r\n\r\n  });\r\n\r\n\r\n\r\n  return (\r\n      <div id={'Chart_' + props.panelId} style={{ height: props.height, width: props.width }}></div>\r\n  );\r\n};\r\n\r\n\r\n/*\r\nconst renderGraph = (parsedData, header1, header2, panelHeight, panelWidth) => {\r\n\r\n        if (!parsedData) {\r\n            return;\r\n        }\r\n\r\n        let top_10_pairs = parsedData.topPairs;\r\n        let source_orgs = parsedData.srcOrgs;\r\n        let dest_orgs = parsedData.destOrgs;\r\n        // let alpha = parsedData.alpha;\r\n        // let color_palette = parsedData.color_palette;\r\n        // let min_value = top_10_pairs[top_10_pairs.length - 1][2]\r\n        // let max_value = top_10_pairs[0][2]\r\n\r\n        // set the dimensions and margins of the graph\r\n        var margin = { top: 50, right: 400, bottom: 25, left: 400 },\r\n            width = panelWidth - margin.left - margin.right,\r\n            height = panelHeight - margin.top - margin.bottom;\r\n\r\n\r\n\r\n        // append the svg object to the body of the page\r\n        var svg = d3.select('Chart_' + props.panelId)\r\n            .append(\"svg\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            .append(\"g\")\r\n            .attr(\"transform\",\r\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n\r\n        // function to wrap text!\r\n        function wrap(text, width) {\r\n            text.each(function () {\r\n                var text = d3.select(this),\r\n                    words = text.text().split(/\\s+/).reverse(),\r\n                    word,\r\n                    line = [],\r\n                    lineNumber = 0,\r\n                    lineHeight = 1.1, // ems\r\n                    y = text.attr(\"y\"),\r\n                    dy = parseFloat(text.attr(\"dy\")),\r\n                    tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\r\n                while (word = words.pop()) {\r\n                    line.push(word);\r\n                    tspan.text(line.join(\" \"));\r\n                    if (tspan.node().getComputedTextLength() > width) {\r\n                        line.pop();\r\n                        tspan.text(line.join(\" \"));\r\n                        line = [word];\r\n                        tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        // Add X scale\r\n        var x = d3.scaleLinear()\r\n            .domain([0, 1])\r\n            .range([0, width])\r\n\r\n\r\n        // y scales\r\n        var yl = d3.scaleLinear()\r\n            .domain([0, source_orgs.length - 1])\r\n            .range([0, height])\r\n\r\n        var yr = d3.scaleLinear()\r\n            .domain([0, dest_orgs.length - 1])\r\n            .range([0, height])\r\n\r\n\r\n        // Add Y axes\r\n        var leftAxis = d3.axisLeft(yl)\r\n            .tickSize(5)\r\n            .ticks(source_orgs.length)\r\n            .tickFormat((d) => {\r\n                return source_orgs[d]\r\n            })\r\n\r\n        var rightAxis = d3.axisRight(yr)\r\n            .tickSize(5)\r\n            .ticks(dest_orgs.length)\r\n            .tickFormat((d) => {\r\n                return dest_orgs[d]\r\n            })\r\n\r\n        svg.append(\"g\").call(leftAxis)\r\n            .attr(\"class\", \"axis\")\r\n            .attr(\"margin\", 10)\r\n            .selectAll(\".tick text\")\r\n            .call(wrap, margin.left - 50)\r\n            .attr(\"transform\", \"translate(\" + -10 + \",0)\")\r\n\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", \"translate(\" + width + \",0)\")\r\n            .call(rightAxis)\r\n            .attr(\"class\", \"axis\")\r\n            .selectAll(\".tick text\")\r\n            .call(wrap, margin.right - 50)\r\n            .attr(\"transform\", \"translate(\" + 10 + \",0)\")\r\n\r\n\r\n\r\n        // scale for width of lines\r\n        var w = d3.scaleLinear()\r\n            .domain([top_10_pairs[top_10_pairs.length - 1][2], top_10_pairs[0][2]])\r\n            .range([3, 15])\r\n\r\n        var div = d3.select(\"body\").append(\"div\")\r\n            .attr(\"class\", \"tooltip\")\r\n            .style(\"opacity\", 0);\r\n\r\n\r\n        // Add the lines\r\n        for (var i in top_10_pairs) {\r\n            var value = top_10_pairs[i][2];\r\n\r\n            svg.append(\"path\")\r\n                .datum(top_10_pairs[i].coords)\r\n                .attr(\"fill\", \"none\")\r\n                .attr(\"stroke\", function (d) { return d[0].color })\r\n                //() => {\r\n                //     var alpha = 0.7; // w(top_10_pairs[i][2]) / 5;\r\n                //     var color = \"rgba(51, 102, 255,\" + alpha + \")\";\r\n                //     return color;\r\n                // })\r\n                .attr(\"stroke-width\", 8) // w(top_10_pairs[i][2]))\r\n                .attr(\"d\", d3.line()\r\n                    .x(function (d) { return x(d.x) })\r\n                    .y(function (d) {\r\n                        if (d.x == 0) {\r\n                            return yl(d.y)\r\n                        } else {\r\n                            return yr(d.y)\r\n                        }\r\n                    }))\r\n                .on(\"mouseover\", function (d) {\r\n                    d3.select(this).attr(\"stroke\", \"orange\")\r\n                        .attr(\"class\", \"path-hover\");\r\n                    div.transition()\r\n                        .duration(200)\r\n                        .style(\"opacity\", .9);\r\n                    div.html(() => {                    // takes in value in BYTES and converts to appropriate MB,GB, etc\r\n                        var value = d[0].value\r\n                        value = value / 1000;\r\n                        var volume = value;\r\n                        if (value < 1000) {\r\n                            volume = (Math.round(value * 10) / 10) + \" KB\";\r\n                        } else {\r\n                            value = value / 1000;\r\n                            if (value < 1000) {\r\n                                volume = (Math.round(value * 10) / 10) + \" MB\"\r\n                            } else {\r\n                                value = value / 1000;\r\n                                if (value < 1000) {\r\n                                    volume = (Math.round(value * 10) / 10) + \" GB\"\r\n                                } else {\r\n                                    value = value / 1000;\r\n                                    if (value < 1000) {\r\n                                        volume = (Math.round(value * 10) / 10) + \" TB\"\r\n                                    } else {\r\n                                        volume = (Math.round(value * 10) / 10) + \" PB\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        var text = \"<p><b>Source:</b> \" + d[0].source + \"</p><p><b>Destination:</b> \" + d[0].dest + \"</p><p><b>Volume:</b> \" + volume;\r\n                        return text;\r\n                    })\r\n                        .style(\"left\", (d3.event.pageX) + \"px\")\r\n                        .style(\"top\", (d3.event.pageY - 28) + \"px\")\r\n                })\r\n                .on(\"mouseout\", function (d) {\r\n                    div.transition()\r\n                        .duration(500)\r\n                        .style(\"opacity\", 0);\r\n                    d3.select(this).attr(\"stroke\", () => {\r\n                        return d[0].color;\r\n                    })\r\n                })\r\n        }\r\n\r\n        // Add axis labels\r\n        svg.append(\"text\")\r\n            .attr(\"class\", \"header-text\")\r\n            .attr(\"transform\", \"translate(\" + -(margin.left / 2) + \",\" + -(margin.top / 2) + \")\")  // above left axis\r\n            .attr(\"text-anchor\", \"center\")\r\n            .text(header1);\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"class\", \"header-text\")\r\n            .attr(\"transform\", \"translate(\" + (width + margin.right / 5) + \",\" + -(margin.top / 2) + \")\")  // above right axis\r\n            .attr(\"text-anchor\", \"center\")\r\n            .text(header2);\r\n\r\n    }\r\n\r\n\r\nconst render_chart =(chartDiv)=>{\r\n  const graph_options = props.options;\r\n  const header1 = graph_options.leftHeader;\r\n  const header2 = graph_options.rightHeader;\r\n  const height = props.height;\r\n  const width = props.width;\r\n  const data = props.data;\r\n\r\n  renderGraph(data, header1, header2, height, width);\r\n\r\n  */\r\n","import { PanelPlugin } from '@grafana/data';\r\nimport { SimpleOptions } from './types';\r\nimport { SimplePanel } from './SimplePanel';\r\n\r\nexport const plugin = new PanelPlugin<SimpleOptions>(SimplePanel).setPanelOptions(builder => {\r\n  return builder\r\n    .addTextInput({\r\n      path: 'text',\r\n      name: 'Simple text option',\r\n      description: 'Description of panel option',\r\n      defaultValue: 'Default value of text input option',\r\n    })\r\n    .addBooleanSwitch({\r\n      path: 'showSeriesCount',\r\n      name: 'Show series counter',\r\n      defaultValue: false,\r\n    })\r\n    .addRadio({\r\n      path: 'seriesCountSize',\r\n      defaultValue: 'sm',\r\n      name: 'Series counter size',\r\n      settings: {\r\n        options: [\r\n          {\r\n            value: 'sm',\r\n            label: 'Small',\r\n          },\r\n          {\r\n            value: 'md',\r\n            label: 'Medium',\r\n          },\r\n          {\r\n            value: 'lg',\r\n            label: 'Large',\r\n          },\r\n        ],\r\n      },\r\n      showIf: config => config.showSeriesCount,\r\n    })\r\n    .addNumberInput({\r\n      path: 'numLines',\r\n      name: 'Number of Lines to Display',\r\n      defaultValue: 10,\r\n    })\r\n    .addTextInput({\r\n      path: 'leftHeader',\r\n      name: 'Left Column Header',\r\n      defaultValue: 'Left Title',\r\n    })\r\n    .addTextInput({\r\n      path: 'rightHeader',\r\n      name: 'Right Column Header',\r\n      defaultValue: 'Right Title',\r\n    });\r\n});\r\n","import React from 'react';\r\nimport { PanelProps } from '@grafana/data';\r\nimport { SimpleOptions } from 'types';\r\nimport { ParseData } from 'parser.js';\r\nimport { Canvas } from 'components/Canvas';\r\n\r\ninterface Props extends PanelProps<SimpleOptions> {}\r\n\r\nexport const SimplePanel: React.FC<Props> = ({ options, data, width, height, id }) => {\r\n  let graph_options = {\r\n    ...options\r\n  }\r\n\r\n  const parsedData = ParseData(data, graph_options.numLines);\r\n\r\n  console.log(parsedData);\r\n  console.log(graph_options);\r\n\r\n  return <Canvas height={height} width={width} panelId={id} options={graph_options} data={parsedData} />;\r\n\r\n};\r\n\r\n/*\r\nvar d3 = require('d3')\r\n\r\nclass SvgHandler {\r\n    constructor(id) {\r\n        this.containerID = id;\r\n    }\r\n\r\n    renderGraph(parsedData, ctrl, header1, header2) {\r\n\r\n        if (!parsedData) {\r\n            return;\r\n        }\r\n\r\n        let top_10_pairs = parsedData.topPairs;\r\n        let source_orgs = parsedData.srcOrgs;\r\n        let dest_orgs = parsedData.destOrgs;\r\n        let alpha = parsedData.alpha;\r\n        let color_palette = parsedData.color_palette;\r\n\r\n        let min_value = top_10_pairs[top_10_pairs.length - 1][2]\r\n        let max_value = top_10_pairs[0][2]\r\n\r\n        console.log(\"rendering Graph...\");\r\n\r\n        let panelWidth = document.getElementById(this.containerID).offsetWidth;\r\n        let panelHeight = document.getElementById(this.containerID).offsetHeight;\r\n\r\n        console.log(this.containerID, top_10_pairs);\r\n        // set the dimensions and margins of the graph\r\n        var margin = { top: 50, right: 400, bottom: 25, left: 400 },\r\n            width = panelWidth - margin.left - margin.right,\r\n            height = ctrl.height - margin.top - margin.bottom;\r\n\r\n\r\n\r\n        // append the svg object to the body of the page\r\n        var svg = d3.select(\"#\" + this.containerID)\r\n            .append(\"svg\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            .append(\"g\")\r\n            .attr(\"transform\",\r\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n\r\n        // function to wrap text!\r\n        function wrap(text, width) {\r\n            text.each(function () {\r\n                var text = d3.select(this),\r\n                    words = text.text().split(/\\s+/).reverse(),\r\n                    word,\r\n                    line = [],\r\n                    lineNumber = 0,\r\n                    lineHeight = 1.1, // ems\r\n                    y = text.attr(\"y\"),\r\n                    dy = parseFloat(text.attr(\"dy\")),\r\n                    tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\r\n                while (word = words.pop()) {\r\n                    line.push(word);\r\n                    tspan.text(line.join(\" \"));\r\n                    if (tspan.node().getComputedTextLength() > width) {\r\n                        line.pop();\r\n                        tspan.text(line.join(\" \"));\r\n                        line = [word];\r\n                        tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        // Add X scale\r\n        var x = d3.scaleLinear()\r\n            .domain([0, 1])\r\n            .range([0, width])\r\n\r\n\r\n        // y scales\r\n        var yl = d3.scaleLinear()\r\n            .domain([0, source_orgs.length - 1])\r\n            .range([0, height])\r\n\r\n        var yr = d3.scaleLinear()\r\n            .domain([0, dest_orgs.length - 1])\r\n            .range([0, height])\r\n\r\n\r\n        // Add Y axes\r\n        var leftAxis = d3.axisLeft(yl)\r\n            .tickSize(5)\r\n            .ticks(source_orgs.length)\r\n            .tickFormat((d) => {\r\n                return source_orgs[d]\r\n            })\r\n\r\n        var rightAxis = d3.axisRight(yr)\r\n            .tickSize(5)\r\n            .ticks(dest_orgs.length)\r\n            .tickFormat((d) => {\r\n                return dest_orgs[d]\r\n            })\r\n\r\n        svg.append(\"g\").call(leftAxis)\r\n            .attr(\"class\", \"axis\")\r\n            .attr(\"margin\", 10)\r\n            .selectAll(\".tick text\")\r\n            .call(wrap, margin.left - 50)\r\n            .attr(\"transform\", \"translate(\" + -10 + \",0)\")\r\n\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", \"translate(\" + width + \",0)\")\r\n            .call(rightAxis)\r\n            .attr(\"class\", \"axis\")\r\n            .selectAll(\".tick text\")\r\n            .call(wrap, margin.right - 50)\r\n            .attr(\"transform\", \"translate(\" + 10 + \",0)\")\r\n\r\n\r\n\r\n        // scale for width of lines\r\n        var w = d3.scaleLinear()\r\n            .domain([top_10_pairs[top_10_pairs.length - 1][2], top_10_pairs[0][2]])\r\n            .range([3, 15])\r\n\r\n        var div = d3.select(\"body\").append(\"div\")\r\n            .attr(\"class\", \"tooltip\")\r\n            .style(\"opacity\", 0);\r\n\r\n\r\n        // Add the lines\r\n        for (i in top_10_pairs) {\r\n            var value = top_10_pairs[i][2];\r\n\r\n            svg.append(\"path\")\r\n                .datum(top_10_pairs[i].coords)\r\n                .attr(\"fill\", \"none\")\r\n                .attr(\"stroke\", function (d) { return d[0].color })\r\n                //() => {\r\n                //     var alpha = 0.7; // w(top_10_pairs[i][2]) / 5;\r\n                //     var color = \"rgba(51, 102, 255,\" + alpha + \")\";\r\n                //     return color;\r\n                // })\r\n                .attr(\"stroke-width\", 8) // w(top_10_pairs[i][2]))\r\n                .attr(\"d\", d3.line()\r\n                    .x(function (d) { return x(d.x) })\r\n                    .y(function (d) {\r\n                        if (d.x == 0) {\r\n                            return yl(d.y)\r\n                        } else {\r\n                            return yr(d.y)\r\n                        }\r\n                    }))\r\n                .on(\"mouseover\", function (d) {\r\n                    d3.select(this).attr(\"stroke\", \"orange\")\r\n                        .attr(\"class\", \"path-hover\");\r\n                    div.transition()\r\n                        .duration(200)\r\n                        .style(\"opacity\", .9);\r\n                    div.html(() => {                    // takes in value in BYTES and converts to appropriate MB,GB, etc\r\n                        var value = d[0].value\r\n                        value = value / 1000;\r\n                        var volume = value;\r\n                        if (value < 1000) {\r\n                            volume = (Math.round(value * 10) / 10) + \" KB\";\r\n                        } else {\r\n                            value = value / 1000;\r\n                            if (value < 1000) {\r\n                                volume = (Math.round(value * 10) / 10) + \" MB\"\r\n                            } else {\r\n                                value = value / 1000;\r\n                                if (value < 1000) {\r\n                                    volume = (Math.round(value * 10) / 10) + \" GB\"\r\n                                } else {\r\n                                    value = value / 1000;\r\n                                    if (value < 1000) {\r\n                                        volume = (Math.round(value * 10) / 10) + \" TB\"\r\n                                    } else {\r\n                                        volume = (Math.round(value * 10) / 10) + \" PB\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        var text = \"<p><b>Source:</b> \" + d[0].source + \"</p><p><b>Destination:</b> \" + d[0].dest + \"</p><p><b>Volume:</b> \" + volume;\r\n                        return text;\r\n                    })\r\n                        .style(\"left\", (d3.event.pageX) + \"px\")\r\n                        .style(\"top\", (d3.event.pageY - 28) + \"px\")\r\n                })\r\n                .on(\"mouseout\", function (d) {\r\n                    div.transition()\r\n                        .duration(500)\r\n                        .style(\"opacity\", 0);\r\n                    d3.select(this).attr(\"stroke\", () => {\r\n                        return d[0].color;\r\n                    })\r\n                })\r\n        }\r\n\r\n        // Add axis labels\r\n        svg.append(\"text\")\r\n            .attr(\"class\", \"header-text\")\r\n            .attr(\"transform\", \"translate(\" + -(margin.left / 2) + \",\" + -(margin.top / 2) + \")\")  // above left axis\r\n            .attr(\"text-anchor\", \"center\")\r\n            .text(header1);\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"class\", \"header-text\")\r\n            .attr(\"transform\", \"translate(\" + (width + margin.right / 5) + \",\" + -(margin.top / 2) + \")\")  // above right axis\r\n            .attr(\"text-anchor\", \"center\")\r\n            .text(header2);\r\n\r\n        // add legend\r\n\r\n        // var colorScale = d3.scaleQuantize()\r\n        //     .domain([min_value,max_value])\r\n        //     .range(color_palette);\r\n\r\n        // var colorLegend = d3.legendColor()\r\n        //     .labelFormat(d3.format(\".0f\"))\r\n        //     .scale(colorScale)\r\n        //     .shapePadding(3)\r\n        //     .shapeWidth(50)\r\n        //     .shapeHeight(20)\r\n        //     .labelOffset(12);\r\n\r\n        // svg.append(\"g\")\r\n        //     .attr(\"transform\", \"translate(\" + (width + margin.right / 2) + \", 60)\")\r\n        //     .call(colorLegend);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = SvgHandler;\r\n*/\r\n","\r\nexport function ParseData(data, num_pairs) {\r\n  console.log(\"react num pairs:\" + num_pairs)\r\n  console.log(\"react data:\");\r\n  console.log(data);\r\n\r\n  // series[0].fields[x].values.buffer gives data now.\r\n  // x = 0: source, 1: dest, 2: value\r\n  var extractedData = data.series[0].fields;\r\n  var transformedData = [];\r\n\r\n  for (var i in extractedData[0].values.buffer) {\r\n    var row = [extractedData[0].values.buffer[i], extractedData[1].values.buffer[i], extractedData[2].values.buffer[i]];\r\n    transformedData.push(row);\r\n  }\r\n  console.log(\"transformed data\");\r\n  console.log(transformedData);\r\n\r\n  let sorted_org_pairs = transformedData.sort((a, b) => b[2] - a[2]);\r\n\r\n  // top 10 is actually top N, set by editor.  Default is 10.\r\n  let top_10_pairs = sorted_org_pairs.slice(0, Math.min(num_pairs, sorted_org_pairs.length));\r\n\r\n\r\n  // MAKE KEYS\r\n  let source_orgs = [];\r\n  let source_encoding = [];\r\n  let counter = 0;\r\n  for (var i in top_10_pairs) {\r\n    let new_org = top_10_pairs[i][0];\r\n    let added = false;\r\n    top_10_pairs[i].coords = [\r\n      { \"x\": 0, \"value\": top_10_pairs[i][2] },\r\n      { \"x\": 1 }]\r\n    for (var j in source_orgs) {\r\n      if (source_orgs[j] == new_org) {\r\n        added = true;\r\n        source_encoding.push(parseInt(j));\r\n        top_10_pairs[i].coords[0].y = parseInt(j);\r\n        break;\r\n      }\r\n    }\r\n    if (!added) {\r\n      source_orgs.push(new_org);\r\n      source_encoding.push(counter);\r\n      top_10_pairs[i].coords[0].y = counter;\r\n      counter++;\r\n    }\r\n  }\r\n\r\n  // dest keys\r\n\r\n  let dest_orgs = [];\r\n  let dest_encoding = [];\r\n  counter = 0;\r\n  for (var i in top_10_pairs) {\r\n    let new_org = top_10_pairs[i][1];\r\n    let added = false;\r\n    for (var j in dest_orgs) {\r\n      if (dest_orgs[j] == new_org) {\r\n        added = true;\r\n        dest_encoding.push(parseInt(j));\r\n        top_10_pairs[i].coords[1].y = parseInt(j);\r\n        break;\r\n      }\r\n    }\r\n    if (!added) {\r\n      dest_orgs.push(new_org);\r\n      dest_encoding.push(counter);\r\n      top_10_pairs[i].coords[1].y = counter;\r\n      counter++;\r\n    }\r\n  }\r\n\r\n\r\n  // tick marks at source_orgs & dest_orgs,\r\n  // line y values at source_encoding & dest_encoding\r\n  // line thickness relative to top_values\r\n\r\n\r\n  // set colors by value as well.\r\n  let alpha = 0.6\r\n  let color_palette = [\r\n    \"rgba(196, 199, 254, \" + alpha + \")\",\r\n    \"rgba(171, 176, 253, \" + alpha + \")\",\r\n    \"rgba(146, 152, 248, \" + alpha + \")\",\r\n    \"rgba(122, 130, 246, \" + alpha + \")\",\r\n    \"rgba(106, 115, 245, \" + alpha + \")\",\r\n    \"rgba(85, 95, 244, \" + alpha + \")\",\r\n    \"rgba(56, 67, 241, \" + alpha + \")\",\r\n    \"rgba(23, 36, 238, \" + alpha + \")\",\r\n    \"rgba(2, 14, 202, \" + alpha + \")\",\r\n    \"rgba(3, 12, 158, \" + alpha + \")\"]\r\n\r\n  let max_value = top_10_pairs[0][2];\r\n\r\n  console.log(\"max val: \" + max_value);\r\n\r\n  for (var i in top_10_pairs) {\r\n    let color_scale = Math.ceil(top_10_pairs[i][2] / max_value * 10)\r\n    if (color_scale > 0) {\r\n      color_scale--;\r\n    }\r\n    top_10_pairs[i].coords[0].color = color_palette[color_scale];\r\n\r\n    // add source/dest to coords\r\n    top_10_pairs[i].coords[0].source = top_10_pairs[i][0];\r\n    top_10_pairs[i].coords[0].dest = top_10_pairs[i][1];\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  console.log(top_10_pairs)\r\n\r\n  let objToReturn = {\r\n    srcOrgs: source_orgs,\r\n    destOrgs: dest_orgs,\r\n    topPairs: top_10_pairs\r\n  }\r\n\r\n  return objToReturn;\r\n}\r\n\r\n"],"sourceRoot":""}