{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@grafana/data\"","webpack:///external \"react\"","webpack:///./module.ts","webpack:///./SimplePanel.tsx","webpack:///./parser.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","data","parsedData","num_pairs","console","log","sorted_org_pairs","rows","sort","a","b","top_10_pairs","slice","Math","min","length","source_orgs","source_encoding","counter","new_org","added","j","coords","push","parseInt","y","dest_orgs","dest_encoding","color_palette","max_value","color_scale","ceil","color","source","dest","srcOrgs","destOrgs","topPairs","ParseData","setPanelOptions","builder","addTextInput","path","description","defaultValue","addBooleanSwitch","addRadio","settings","options","label","showIf","config","addNumberInput"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import { PanelPlugin } from '@grafana/data';\r\nimport { SimpleOptions } from './types';\r\nimport { SimplePanel } from './SimplePanel';\r\n\r\nexport const plugin = new PanelPlugin<SimpleOptions>(SimplePanel).setPanelOptions(builder => {\r\n  return builder\r\n    .addTextInput({\r\n      path: 'text',\r\n      name: 'Simple text option',\r\n      description: 'Description of panel option',\r\n      defaultValue: 'Default value of text input option',\r\n    })\r\n    .addBooleanSwitch({\r\n      path: 'showSeriesCount',\r\n      name: 'Show series counter',\r\n      defaultValue: false,\r\n    })\r\n    .addRadio({\r\n      path: 'seriesCountSize',\r\n      defaultValue: 'sm',\r\n      name: 'Series counter size',\r\n      settings: {\r\n        options: [\r\n          {\r\n            value: 'sm',\r\n            label: 'Small',\r\n          },\r\n          {\r\n            value: 'md',\r\n            label: 'Medium',\r\n          },\r\n          {\r\n            value: 'lg',\r\n            label: 'Large',\r\n          },\r\n        ],\r\n      },\r\n      showIf: config => config.showSeriesCount,\r\n    })\r\n    .addNumberInput({\r\n      path: 'numLines',\r\n      name: 'Number of Lines to Display',\r\n      defaultValue: 10,\r\n    })\r\n    .addTextInput({\r\n      path: 'leftHeader',\r\n      name: 'Left Column Header',\r\n      defaultValue: 'Left Title',\r\n    })\r\n    .addTextInput({\r\n      path: 'rightHeader',\r\n      name: 'Right Column Header',\r\n      defaultValue: 'Right Title',\r\n    });\r\n});\r\n","import React from 'react';\r\nimport { PanelProps } from '@grafana/data';\r\nimport { SimpleOptions } from 'types';\r\nimport { ParseData } from 'parser.js';\r\n\r\ninterface Props extends PanelProps<SimpleOptions> {}\r\n\r\nexport const SimplePanel: React.FC<Props> = ({ options, data, width, height }) => {\r\n  const parsedData = ParseData(data);\r\n\r\n  console.log(parsedData);\r\n\r\n  return (\r\n    <div>React Panel</div>\r\n  );\r\n};\r\n","\r\nexport function ParseData(data, num_pairs) {\r\n  console.log(\"react num pairs:\" + num_pairs)\r\n  console.log(\"react data:\");\r\n  console.log(data);\r\n  var org_pairs = data[0].rows;\r\n\r\n  // rows gives array of array[3], 0: source, 1: dest, 2: value\r\n\r\n\r\n  let sorted_org_pairs = org_pairs.sort((a, b) => b[2] - a[2])\r\n\r\n  // top 10 is actually top N, set by editor.  Default is 10.\r\n  let top_10_pairs = sorted_org_pairs.slice(0, Math.min(num_pairs, sorted_org_pairs.length));\r\n\r\n\r\n  // MAKE KEYS\r\n  let source_orgs = [];\r\n  let source_encoding = [];\r\n  let counter = 0;\r\n  for (i in top_10_pairs) {\r\n    let new_org = top_10_pairs[i][0];\r\n    let added = false;\r\n    top_10_pairs[i].coords = [\r\n      { \"x\": 0, \"value\": top_10_pairs[i][2] },\r\n      { \"x\": 1 }]\r\n    for (j in source_orgs) {\r\n      if (source_orgs[j] == new_org) {\r\n        added = true;\r\n        source_encoding.push(parseInt(j));\r\n        top_10_pairs[i].coords[0].y = parseInt(j);\r\n        break;\r\n      }\r\n    }\r\n    if (!added) {\r\n      source_orgs.push(new_org);\r\n      source_encoding.push(counter);\r\n      top_10_pairs[i].coords[0].y = counter;\r\n      counter++;\r\n    }\r\n  }\r\n\r\n  // dest keys\r\n\r\n  let dest_orgs = [];\r\n  let dest_encoding = [];\r\n  counter = 0;\r\n  for (i in top_10_pairs) {\r\n    let new_org = top_10_pairs[i][1];\r\n    let added = false;\r\n    for (j in dest_orgs) {\r\n      if (dest_orgs[j] == new_org) {\r\n        added = true;\r\n        dest_encoding.push(parseInt(j));\r\n        top_10_pairs[i].coords[1].y = parseInt(j);\r\n        break;\r\n      }\r\n    }\r\n    if (!added) {\r\n      dest_orgs.push(new_org);\r\n      dest_encoding.push(counter);\r\n      top_10_pairs[i].coords[1].y = counter;\r\n      counter++;\r\n    }\r\n  }\r\n\r\n\r\n  // tick marks at source_orgs & dest_orgs,\r\n  // line y values at source_encoding & dest_encoding\r\n  // line thickness relative to top_values\r\n\r\n\r\n  // set colors by value as well.\r\n  let alpha = 0.6\r\n  let color_palette = [\r\n    \"rgba(196, 199, 254, \" + alpha + \")\",\r\n    \"rgba(171, 176, 253, \" + alpha + \")\",\r\n    \"rgba(146, 152, 248, \" + alpha + \")\",\r\n    \"rgba(122, 130, 246, \" + alpha + \")\",\r\n    \"rgba(106, 115, 245, \" + alpha + \")\",\r\n    \"rgba(85, 95, 244, \" + alpha + \")\",\r\n    \"rgba(56, 67, 241, \" + alpha + \")\",\r\n    \"rgba(23, 36, 238, \" + alpha + \")\",\r\n    \"rgba(2, 14, 202, \" + alpha + \")\",\r\n    \"rgba(3, 12, 158, \" + alpha + \")\"]\r\n\r\n  let max_value = top_10_pairs[0][2];\r\n\r\n  console.log(\"max val: \" + max_value);\r\n\r\n  for (i in top_10_pairs) {\r\n    let color_scale = Math.ceil(top_10_pairs[i][2] / max_value * 10)\r\n    if (color_scale > 0) {\r\n      color_scale--;\r\n    }\r\n    top_10_pairs[i].coords[0].color = color_palette[color_scale];\r\n\r\n    // add source/dest to coords\r\n    top_10_pairs[i].coords[0].source = top_10_pairs[i][0];\r\n    top_10_pairs[i].coords[0].dest = top_10_pairs[i][1];\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  console.log(top_10_pairs)\r\n\r\n  let objToReturn = {\r\n    srcOrgs: source_orgs,\r\n    destOrgs: dest_orgs,\r\n    topPairs: top_10_pairs\r\n  }\r\n\r\n  return objToReturn;\r\n}\r\n\r\n"],"sourceRoot":""}